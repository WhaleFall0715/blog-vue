"use strict";(self.webpackChunkblog_vue=self.webpackChunkblog_vue||[]).push([[32],{107:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>h,data:()=>k});var n=a(641);const l={},h=(0,a(6262).A)(l,[["render",function(s,i){return(0,n.uX)(),(0,n.CE)("div",null,[(0,n.Q3)(" more "),i[0]||(i[0]=(0,n.Fv)('<h1 id="如何使用-vue-press-jenkins-docker-实现一键部署到服务器的博客网站" tabindex="-1"><a class="header-anchor" href="#如何使用-vue-press-jenkins-docker-实现一键部署到服务器的博客网站"><span>如何使用 VUE Press+Jenkins+Docker 实现一键部署到服务器的博客网站</span></a></h1><h2 id="_1-docker-与-nginx-配置" tabindex="-1"><a class="header-anchor" href="#_1-docker-与-nginx-配置"><span>1.Docker 与 Nginx 配置</span></a></h2><p>​ 在服务器安装 Docker 时，要注意修改镜像网站，修改指令如下</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#进入路径</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sudo </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">nano</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">etc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">docker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/daemon.json</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#配置镜像</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;registry-mirrors&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;insecure-registries&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;my-private-registry:5000&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;log-driver&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;json-file&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;log-opts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;max-size&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100m&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;max-file&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;data-root&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/mnt/docker-data&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;default-ulimits&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;nofile&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;Name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;nofile&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;Hard&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">65536</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;Soft&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">65536</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#重启Docker</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sudo systemctl restart docker  # Linux</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 否则在安装时，就算可以安装 docker，也无法下载 Nginx 依赖</p><p>​ 安装 Nginx 依赖</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 更新系统包</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sudo apt </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sudo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> apt </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">upgrade</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">y</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 安装依赖</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sudo apt </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">y</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> apt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">transport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">https</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ca</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">certificates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> curl </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">software</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">common</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 添加Docker官方GPG密钥</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">curl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fsSL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> https://download.docker.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">linux</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ubuntu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gpg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | sudo </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gpg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> --</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dearmor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">o</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keyrings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">docker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">archive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-keyring.gpg</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 添加Docker仓库</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">echo </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | sudo </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">etc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">apt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/sources.list.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/docker.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 安装Docker引擎</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sudo apt </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sudo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> apt </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">y</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> docker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ce</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> docker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ce</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cli</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> containerd.io</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 验证安装（出现</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello from Docker!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">即成功）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sudo docker run </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">world</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 拉取Nginx依赖</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker pull nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 将 Nginx 拉取后就可以编写 Dockerfile 实现自动化部署，例如下述</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#Dockerfile</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#设定Nginx版本</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">FROM nginx:alpine</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#拷贝路径到Nginx路径下</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">COPY ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dist</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">nginx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#拷贝Nginx配置</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">COPY ./nginx.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">etc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">nginx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/conf.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.conf</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#设定端口</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EXPOSE </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 然后再编写部署脚本，实现一键执行部署</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#Deploy.sh</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># 进入项目目录</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">home</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">shared</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 停止并移除旧容器（如果存在）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker stop </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">site</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ||</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker rm </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">site</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ||</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 重新构建镜像，使用当前文件夹的dockerfile</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">t</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> static</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">site</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 运行新容器</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> --</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> my</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">site</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> static</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">site</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. 清理无用镜像（可选）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker image </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">prune</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">f</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">null</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">echo </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;✅ 部署完成！容器已启动。&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 编写完成上述脚本，就可以实现 deploy.sh-&gt;清除旧容器-&gt;复制工作目录-&gt;构建镜像-&gt;运行容器部署，的过程，下面就开始介绍如何将压缩包自动解压并且部署</p><h2 id="_2-jenkins-实现自动解压压缩包和执行脚本" tabindex="-1"><a class="header-anchor" href="#_2-jenkins-实现自动解压压缩包和执行脚本"><span>2.Jenkins 实现自动解压压缩包和执行脚本</span></a></h2><p>​ 在服务器上安装 Jenkins，并且下载基础插件：汉化、流水线等功能</p><p>​ 在工作中，新建流水线项目，取名后就可以编写解压缩脚本以及执行脚本</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pipeline {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    agent any</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    triggers {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        pollSCM(&#39;H/2 * * * *&#39;)  // 每分钟检查一次（比 cron 更高效）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    stages {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        stage(&#39;Check &amp; Execute&#39;) {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            steps {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                script {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    if (fileExists(&#39;/home/shared/dist.zip&#39;)) {</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        echo &quot;发现 dist.zip，开始处理...&quot;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        sh &#39;&#39;&#39;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            cd /home/shared</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            echo &quot;开始解压...&quot;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            unzip -o dist.zip -d dist/ || true</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            echo &quot;解压完成&quot;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            chmod +x deploy.sh</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            ./deploy.sh 2&gt;&amp;1 | tee deploy.log</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                            rm -f dist.zip</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # 删除原压缩包</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        &#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&#39;&#39;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    }else echo &quot;未发现dist.zip&quot;</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                }</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            }</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        }</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    }</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 然后执行这个脚本就可以全自动的执行解压 dist.zip 然后部署</p><p>​ 在执行时，有时候会出现 PermissionDenied，这时候是因为 Jenkins 没有当前文件夹的读写权限，需要在当前文件夹的用户组中加入 Jenkins。</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sudo </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">chown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">R</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> :</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jenkins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">home</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  # 修改所属组</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sudo </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">chmod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">R</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rwx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">home</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    # 赋予组读写执行权限</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#使用</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">home</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">shared</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#应该输出下述</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">drwxrwxr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> root jenkins </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4096</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Jan </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">34</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">home</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">shared</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 此时，Jenkins 就拥有对当前文件夹的权限了</p><h2 id="_3-实现远程调用-jenkinsapi-执行自动部署脚本" tabindex="-1"><a class="header-anchor" href="#_3-实现远程调用-jenkinsapi-执行自动部署脚本"><span>3.实现远程调用 JenkinsAPI 执行自动部署脚本</span></a></h2><p>​ 在配置完 Jenkins 之后，要想实现全自动部署，需要在远程使用脚本调用 JenkinsAPI，这样才可以实现全自动的部署。</p><p>​ 先要在 Jenkins 权限中设置都可以访问</p><figure><img src="https://gitee.com/dufei_handsome/mypic/raw/master/20250818152345.png" alt="image-20250818152343581" tabindex="0" loading="lazy"><figcaption>image-20250818152343581</figcaption></figure><p>​ 授权中指定任何用户都可以使用，也可以在请求的 header 中塞入 token 或者用户密码来实现有权限的访问。下一步要设定工作流的访问权限</p><p><img src="https://gitee.com/dufei_handsome/mypic/raw/master/20250818152450.png" alt="image-20250818152449152" loading="lazy"> 在工作流中勾选触发远程构建，然后输入 Token 令牌，实现远程调用。下一步编写远程脚本进行调用。在 windows 中，使用 ps1 文件编写脚本。</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cmd"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#DEPLOY.ps1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># 上传 ZIP 文件到服务器</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">USERPROFILE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ssh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id_ed25519</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> .\\dist.zip ubuntu@SERVICE_IP:/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">home</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># 触发 Jenkins 任务</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$jenkinsBaseUrl </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">= </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://SERVICE_IP:8080&quot;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$jenkinsUrl </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">= </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://SERVICE_IP:8080/job/blog-watcher/build&quot;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$buildToken </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">= </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;AUTO_DEPLOY&quot;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$user </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">= </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;admin&quot;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$apiToken </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">= </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;用户Token&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$auth </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">= [</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">Convert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ToBase64String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([Text.Encoding]::ASCII.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetBytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;${user}:${apiToken}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$headers </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">= @{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    Authorization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Basic $auth&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">WebRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Uri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;${jenkinsUrl}?token=${buildToken}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> `</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Method</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> POST</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Headers</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $headers </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">UseBasicParsing</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># 按 Enter 键关闭窗口</span></span>\n<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">Write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;一键打包发送部署完成，我真牛逼！&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 脚本第一步是实现拷贝 zip 到服务器，需要创建私钥进行访问，直接参考 windows 怎么创建私钥即可，下述的使用方法，一定要使用 base64 加密塞进 header，这样可以实现权限访问，下面为用户 token 创建过程：右上角点击用户，进入 Security 创建新 token。</p><figure><img src="https://gitee.com/dufei_handsome/mypic/raw/master/20250818153218.png" alt="image-20250818153217371" tabindex="0" loading="lazy"><figcaption>image-20250818153217371</figcaption></figure><p>​</p><h2 id="_4-vue-press-实现自动打包-部署" tabindex="-1"><a class="header-anchor" href="#_4-vue-press-实现自动打包-部署"><span>4.VUE Press 实现自动打包+部署</span></a></h2><p>​ 在 Package.json 中编写如下脚本</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;docs:build&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vuepress-webpack build src &amp;&amp; npm run compress &amp;&amp; npm run deploy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;docs:clean-dev&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vuepress-webpack dev src --clean-cache&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;docs:dev&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vuepress-webpack dev src&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;docs:update-package&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;npx vp-update&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;compress&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cd src/.vuepress &amp;&amp; jar -cvf dist.zip -C dist .&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;deploy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cd src/.vuepress &amp;&amp; powershell -ExecutionPolicy Bypass -File SEND.ps1&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 使用 jar 打包，可以防止正斜杠和反斜杠的兼容问题。执行 pnpm run docs:build 可以实现全自动对项目进行打包部署。</p>',34))])}]]),k=JSON.parse('{"path":"/posts/docs/%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8.html","title":"如何实现VUE到Docker服务器一键部署","lang":"zh-CN","frontmatter":{"title":"如何实现VUE到Docker服务器一键部署","date":"2025-08-18T00:00:00.000Z","category":["学习博客"],"tag":["学习文档","工作流","自动化部署"],"sticky":false,"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何实现VUE到Docker服务器一键部署\\",\\"image\\":[\\"https://gitee.com/dufei_handsome/mypic/raw/master/20250818152345.png\\",\\"https://gitee.com/dufei_handsome/mypic/raw/master/20250818152450.png\\",\\"https://gitee.com/dufei_handsome/mypic/raw/master/20250818153218.png\\"],\\"datePublished\\":\\"2025-08-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-15T05:47:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"D\\"}]}"],["meta",{"property":"og:url","content":"https://whalefall0715.github.io/blog-vue/blog-vue/posts/docs/%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"D的博客"}],["meta",{"property":"og:title","content":"如何实现VUE到Docker服务器一键部署"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gitee.com/dufei_handsome/mypic/raw/master/20250818152345.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-15T05:47:23.000Z"}],["meta",{"property":"article:tag","content":"自动化部署"}],["meta",{"property":"article:tag","content":"工作流"}],["meta",{"property":"article:tag","content":"学习文档"}],["meta",{"property":"article:published_time","content":"2025-08-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-15T05:47:23.000Z"}]]},"git":{"createdTime":1757915243000,"updatedTime":1757915243000,"contributors":[{"name":"dufei","username":"dufei","email":"1737402801@qq.com","commits":1,"url":"https://github.com/dufei"}]},"readingTime":{"minutes":4.32,"words":1296},"filePathRelative":"posts/docs/一键部署到服务器.md","excerpt":""}')},6262:(s,i)=>{i.A=(s,i)=>{const a=s.__vccOpts||s;for(const[s,n]of i)a[s]=n;return a}}}]);